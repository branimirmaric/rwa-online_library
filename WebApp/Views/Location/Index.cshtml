@using NuGet.Protocol
@using WebApp.ViewModels
@model IEnumerable<WebApp.ViewModels.LocationVM>

@{
    ViewData["Title"] = "Index";
    LocationVM newLocation = null;
    if (TempData.ContainsKey("newLocation"))
    {
        newLocation = ((string)TempData["newLocation"]).FromJson<LocationVM>();
    }
}

@if (newLocation != null)
{
    <div class="alert alert-primary" role="alert">
        A new location has been created.
    </div>
}

@if (TempData.ContainsKey("EditMessage"))
{
    <div class="alert alert-warning" role="alert">
        @TempData["EditMessage"]
    </div>
}


@if (TempData.ContainsKey("SuccessMessage"))
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData.ContainsKey("ErrorMessage"))
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<h1 class="text-center text-dark my-3">List of Locations</h1>

<p class="text-center">
    <a asp-action="Create" class="btn btn-outline-primary bi bi-plus-circle"> Create New</a>
</p>
<table class="table table-striped table-hover text-center align-middle">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    <div class="btn-group" role="group">
                        @Html.ActionLink(" Details", "Details", new { id = item.Id }, new { @class = "btn btn-outline-primary me-1 bi bi-hand-index" })
                        @Html.ActionLink(" Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-warning me-1 bi bi-pencil-square" })
                        @Html.ActionLink(" Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger bi bi-trash" })
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
